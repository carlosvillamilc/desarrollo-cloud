version: '3.9'

services:
  flaskapp:
    container_name: flaskapp
    image: flaskapp
    command: gunicorn --workers=4 --bind 0.0.0.0:5000 wsgi:app
    build:
      dockerfile: Dockerfile_web
    ports:
      - "5000:5000"    
    environment:
      - DATABASE_URL=postgresql://conversiontool:conversiontool@34.171.156.60:5432/conversiontool
    #volumes:     
    #  - archivos_audio:/archivos_audio

  cronapp:    
    container_name: cronapp
    image: cronapp
    #command: tail -f /dev/null
    command: gunicorn --workers=4 --bind 0.0.0.0:5000 wsgi:app
    build:
      dockerfile: Dockerfile_cron
    environment:
      - DATABASE_URL=postgresql://conversiontool:conversiontool@34.171.156.60:5432/conversiontool
    #volumes:      
    #  - archivos_audio:/archivos_audio


#volumes:
#  archivos_audio:
#    driver: local
#    driver_opts:
#      type: nfs
#      o: addr=10.128.0.3,nolock,soft,rw    # IP of nfs server.  This is also where you put any options '-o' in standard option format
#      device: ":/home/caedvica86/archivos_audio"  # location on nfs server of file/dir you want to mount
    #depends_on:
    #  - db
    
  #db:
  #  container_name: db
  #  image: postgres:alpine
  #  ports:
  #    - "5432:5432"
  #  environment:
  #    POSTGRES_DB: conversiontool
  #    POSTGRES_USER: conversiontool
  #    POSTGRES_PASSWORD: conversiontool
  #  volumes:
  #    - pgdata:/var/lib/postgresql/data


#volumes:
#  pgdata: {}